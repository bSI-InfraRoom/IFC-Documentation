<!DOCTYPE HTML>

<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <link rel="stylesheet" type="text/css" href="../../../ifc-styles.css">

    <link rel="stylesheet" type="text/css" href="../../../details-shim.css">
    <script type="text/javascript" src="../../../details-shim.js"></script>
    <title>IfcConstraintsParamBSpline</title>

    <style type="text/css">
      body { counter-reset: index1 8 index2 9 index3 4 index4 5 index5 0; }
    </style>
  </head>

  <body>


<script type="text/javascript">
<!--
    parent.index.location.replace("../../toc-8.htm#8.9.4.6");
//-->
</script>

<h4 class="num">IfcConstraintsParamBSpline</h4>
<details open="open"><summary>Natural language names</summary><table>
<table class="gridtable">
<tr><td><img src="../../../img/locale-en.png" /></td><td><b>Constraints Parameterization B-Spline</b></td></tr>
</table>
</details>
<section>
<h5 class="num">Semantic definitions at the function</h5>
<details open="open"><summary>Function Definition</summary><p>
<blockquote class="extDef">
<p>NOTE  Definition according to ISO/CD 10303-42:1992<br>
This function checks the parametrisation of a B-spline curve or (one of the directions of) a B-spline surface and returns TRUE if no inconsistencies are found. These constraints are: &gt; 1. Degree ≤ 1.
2. Upper index on knots ≤ 2.
3. Upper index on control points ≤ degree.
4. Sum of knot multiplicities = degree + (upper index on control points) + 2.
5. For the first and last knot the multiplicity is bounded by 1 and (degree+1).
6. For all other knots the knot multiplicity is bounded by 1 and degree.
7. The consecutive knots are increasing in value.</p>
</blockquote>
<blockquote class="note">
<p>NOTE  Function adapted from <strong>constraints_param_b_spline</strong> defined in ISO 10303-42.</p>
</blockquote>
<blockquote class="history">
<p>HISTORY  New function in IFC4</p>
</blockquote>
</p>
</details>
</section>
<section>
<h5 class="num">Formal representations</h5>
<details open="open"><summary>EXPRESS Specification</summary><div class="xsd"><code class="xsd"><p>
<span class="keyword">FUNCTION</span> IfcConstraintsParamBSpline<br/>

( Degree, UpKnots, UpCp : INTEGER;<br/>&nbsp;&nbsp;KnotMult : LIST OF INTEGER;<br/>&nbsp;&nbsp;Knots : LIST OF <a href="../../ifcmeasureresource/lexical/ifcparametervalue.htm">IfcParameterValue</a> ) <br/>: BOOLEAN;<br/><br/><br/>&nbsp;&nbsp;LOCAL<br/>&nbsp;&nbsp;&nbsp;&nbsp;Result : BOOLEAN := TRUE;<br/>&nbsp;&nbsp;&nbsp;&nbsp;K, Sum : INTEGER;<br/>&nbsp;&nbsp;END_LOCAL;<br/><br/>&nbsp;&nbsp;(* Find sum of knot multiplicities. *)<br/>&nbsp;&nbsp;Sum := KnotMult[1];<br/>&nbsp;&nbsp;REPEAT i := 2 TO UpKnots;<br/>&nbsp;&nbsp;&nbsp;&nbsp;Sum := Sum + KnotMult[i];<br/>&nbsp;&nbsp;END_REPEAT;<br/><br/>&nbsp;&nbsp;(* Check limits holding for all B-spline parametrisations *)<br/>&nbsp;&nbsp;IF (Degree &lt; 1) OR (UpKnots &lt; 2) OR (UpCp &lt; Degree) OR<br/>&nbsp;&nbsp;&nbsp;&nbsp;(Sum &lt;&gt; (Degree + UpCp + 2)) THEN<br/>&nbsp;&nbsp;&nbsp;&nbsp;Result := FALSE;<br/>&nbsp;&nbsp;&nbsp;&nbsp;RETURN(Result);<br/>&nbsp;&nbsp;END_IF;<br/><br/>&nbsp;&nbsp;K := KnotMult[1];<br/>&nbsp;&nbsp;IF (K &lt; 1) OR (K &gt; Degree + 1) THEN<br/>&nbsp;&nbsp;&nbsp;&nbsp;Result := FALSE;<br/>&nbsp;&nbsp;&nbsp;&nbsp;RETURN(Result);<br/>&nbsp;&nbsp;END_IF;<br/><br/>&nbsp;&nbsp;REPEAT i := 2 TO UpKnots;<br/>&nbsp;&nbsp;&nbsp;&nbsp;IF (KnotMult[i] &lt; 1) OR (Knots[i] &lt;= Knots[i-1]) THEN<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result := FALSE;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RETURN(Result);<br/>&nbsp;&nbsp;&nbsp;&nbsp;END_IF;<br/>&nbsp;&nbsp;&nbsp;&nbsp;K := KnotMult[i];<br/>&nbsp;&nbsp;&nbsp;&nbsp;IF (i &lt; UpKnots) AND (K &gt; Degree) THEN<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result := FALSE;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RETURN(Result);<br/>&nbsp;&nbsp;&nbsp;&nbsp;END_IF;<br/>&nbsp;&nbsp;&nbsp;&nbsp;IF (i = UpKnots) AND (K &gt; Degree + 1) THEN<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Result := FALSE;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RETURN(Result);<br/>&nbsp;&nbsp;&nbsp;&nbsp;END_IF;<br/>&nbsp;&nbsp;END_REPEAT;<br/><br/>&nbsp;&nbsp;RETURN(result);<br/>
<br/>

<span class="keyword">END_FUNCTION</span>;

</p>

</code></div></details>
</section>
<p><img src="../../../img/external.png" style="border: 0px" title="References" alt="References"/>&nbsp; References: <a href="../../ifcgeometryresource/lexical/ifcbsplinecurvewithknots.htm">IfcBSplineCurveWithKnots</a>
<a href="../../ifcgeometryresource/lexical/ifcbsplinesurfacewithknots.htm">IfcBSplineSurfaceWithKnots</a>
</p>
<p><a href="../../../link/ifcconstraintsparambspline.htm" target="_top" ><img src="../../../img/permlink.png" style="border: 0px" title="Link to this page" alt="Link to this page"/>&nbsp; Link to this page</a></p>
  </body>
</html>
