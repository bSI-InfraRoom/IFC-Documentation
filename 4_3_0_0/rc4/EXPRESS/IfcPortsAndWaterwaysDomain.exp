(*
Copyright by:
buildingSMART International Limited, 1996-2021

Any technical documentation made available by buildingSMART International Limited
is the copyrighted work of buildingSMART International Limited and is owned by the 
buildingSMART International Limited. It may be photocopied, used in software development, 
or translated into another computer language without prior written consent from 
buildingSMART International Limited provided that full attribution is given. 
Prior written consent is required if changes are made to the technical specification.

This material is delivered to you as is and buildingSMART International Limited makes 
no warranty of any kind with regard to it, including, but not limited to, the implied 
warranties as to its accuracy or fitness for a particular purpose. Any use of the 
technical documentation or the information contained therein is at the risk of the user. 
Documentation may include technical or other inaccuracies or typographical errors. 
buildingSMART International Limited shall not be liable for errors contained therein or 
for incidental consequential damages in connection with the furnishing, performance or use 
of the material. The information contained in this document is subject to change without notice.

Issue date:
13 July 2021

*)

SCHEMA IFCPORTSANDWATERWAYSDOMAIN;

TYPE IfcConveyorSegmentTypeEnum = ENUMERATION OF
	(CHUTECONVEYOR
	,BELTCONVEYOR
	,SCREWCONVEYOR
	,BUCKETCONVEYOR
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcLiquidTerminalTypeEnum = ENUMERATION OF
	(LOADINGARM
	,HOSEREEL
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcMarineFacilityTypeEnum = ENUMERATION OF
	(CANAL
	,WATERWAYSHIPLIFT
	,REVETMENT
	,LAUNCHRECOVERY
	,MARINEDEFENCE
	,HYDROLIFT
	,SHIPYARD
	,SHIPLIFT
	,PORT
	,QUAY
	,FLOATINGDOCK
	,NAVIGATIONALCHANNEL
	,BREAKWATER
	,DRYDOCK
	,JETTY
	,SHIPLOCK
	,BARRIERBEACH
	,SLIPWAY
	,WATERWAY
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcMarinePartTypeEnum = ENUMERATION OF
	(CREST
	,MANUFACTURING
	,LOWWATERLINE
	,CORE
	,WATERFIELD
	,CILL_LEVEL
	,BERTHINGSTRUCTURE
	,COPELEVEL
	,CHAMBER
	,STORAGEAREA
	,APPROACHCHANNEL
	,VEHICLESERVICING
	,SHIPTRANSFER
	,GATEHEAD
	,GUDINGSTRUCTURE
	,BELOWWATERLINE
	,WEATHERSIDE
	,LANDFIELD
	,PROTECTION
	,LEEWARDSIDE
	,ABOVEWATERLINE
	,ANCHORAGE
	,NAVIGATIONALAREA
	,HIGHWATERLINE
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcMooringDeviceTypeEnum = ENUMERATION OF
	(LINETENSIONER
	,MAGNETICDEVICE
	,MOORINGHOOKS
	,VACUUMDEVICE
	,BOLLARD
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

TYPE IfcNavigationElementTypeEnum = ENUMERATION OF
	(BEACON
	,BUOY
	,USERDEFINED
	,NOTDEFINED);
END_TYPE;

ENTITY IfcConveyorSegment
 SUBTYPE OF (IfcFlowSegment);
	PredefinedType : OPTIONAL IfcConveyorSegmentTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcConveyorSegmentTypeEnum.USERDEFINED) OR
((PredefinedType = IfcConveyorSegmentTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCPORTSANDWATERWAYSDOMAIN.IFCCONVEYORSEGMENTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcConveyorSegmentType
 SUBTYPE OF (IfcFlowSegmentType);
	PredefinedType : IfcConveyorSegmentTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcConveyorSegmentTypeEnum.USERDEFINED) OR
((PredefinedType = IfcConveyorSegmentTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcLiquidTerminal
 SUBTYPE OF (IfcFlowTerminal);
	PredefinedType : OPTIONAL IfcLiquidTerminalTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcLiquidTerminalTypeEnum.USERDEFINED) OR
((PredefinedType = IfcLiquidTerminalTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCPORTSANDWATERWAYSDOMAIN.IFCLIQUIDTERMINALTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcLiquidTerminalType
 SUBTYPE OF (IfcFlowTerminalType);
	PredefinedType : IfcLiquidTerminalTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcLiquidTerminalTypeEnum.USERDEFINED) OR
((PredefinedType = IfcLiquidTerminalTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcMarineFacility
 SUBTYPE OF (IfcFacility);
	PredefinedType : OPTIONAL IfcMarineFacilityTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcMarineFacilityTypeEnum.USERDEFINED) OR
((PredefinedType = IfcMarineFacilityTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
END_ENTITY;

ENTITY IfcMooringDevice
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcMooringDeviceTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcMooringDeviceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcMooringDeviceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCPORTSANDWATERWAYSDOMAIN.IFCMOORINGDEVICETYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcMooringDeviceType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcMooringDeviceTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcMooringDeviceTypeEnum.USERDEFINED) OR
((PredefinedType = IfcMooringDeviceTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

ENTITY IfcNavigationElement
 SUBTYPE OF (IfcBuiltElement);
	PredefinedType : OPTIONAL IfcNavigationElementTypeEnum;
 WHERE
	CorrectPredefinedType : NOT(EXISTS(PredefinedType)) OR
(PredefinedType <> IfcNavigationElementTypeEnum.USERDEFINED) OR
((PredefinedType = IfcNavigationElementTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcObject.ObjectType));
	CorrectTypeAssigned : (SIZEOF(IsTypedBy) = 0) OR
('IFCPORTSANDWATERWAYSDOMAIN.IFCNAVIGATIONELEMENTTYPE' IN TYPEOF(SELF\IfcObject.IsTypedBy[1].RelatingType));
END_ENTITY;

ENTITY IfcNavigationElementType
 SUBTYPE OF (IfcBuiltElementType);
	PredefinedType : IfcNavigationElementTypeEnum;
 WHERE
	CorrectPredefinedType : (PredefinedType <> IfcNavigationElementTypeEnum.USERDEFINED) OR
((PredefinedType = IfcNavigationElementTypeEnum.USERDEFINED) AND EXISTS(SELF\IfcElementType.ElementType));
END_ENTITY;

END_SCHEMA;
